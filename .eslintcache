[{"C:\\development\\react\\namma-investment-club\\src\\reportWebVitals.js":"1","C:\\development\\react\\namma-investment-club\\src\\index.js":"2","C:\\development\\react\\namma-investment-club\\src\\App.js":"3","C:\\development\\react\\namma-investment-club\\src\\components\\login\\login.js":"4","C:\\development\\react\\namma-investment-club\\src\\components\\dashboard\\dashboard.js":"5","C:\\development\\react\\namma-investment-club\\src\\firebase.js":"6","C:\\development\\react\\namma-investment-club\\src\\components\\profile-banner.jsx":"7","C:\\development\\react\\namma-investment-club\\src\\components\\menu\\menu.js":"8","C:\\development\\react\\namma-investment-club\\src\\components\\investments\\investments.js":"9","C:\\development\\react\\namma-investment-club\\src\\components\\contributions\\contributions.js":"10","C:\\development\\react\\namma-investment-club\\src\\services\\api.services.js":"11","C:\\development\\react\\namma-investment-club\\src\\components\\dashboard\\shareholding.js":"12","C:\\development\\react\\namma-investment-club\\src\\reducers\\index.js":"13","C:\\development\\react\\namma-investment-club\\src\\reducers\\investment-details.js":"14","C:\\development\\react\\namma-investment-club\\src\\actions\\index.js":"15","C:\\development\\react\\namma-investment-club\\src\\reducers\\contribution-details.js":"16","C:\\development\\react\\namma-investment-club\\src\\reducers\\club-details.js":"17","C:\\development\\react\\namma-investment-club\\src\\common\\constant.js":"18","C:\\development\\react\\namma-investment-club\\src\\common\\common-functions.js":"19","C:\\development\\react\\namma-investment-club\\src\\store.js":"20","C:\\development\\react\\namma-investment-club\\src\\components\\contributions\\contribution-table.js":"21"},{"size":362,"mtime":1608881038000,"results":"22","hashOfConfig":"23"},{"size":500,"mtime":1608881038000,"results":"24","hashOfConfig":"23"},{"size":1385,"mtime":1626035593350,"results":"25","hashOfConfig":"23"},{"size":602,"mtime":1610473552000,"results":"26","hashOfConfig":"27"},{"size":7986,"mtime":1625843481756,"results":"28","hashOfConfig":"23"},{"size":549,"mtime":1610517434000,"results":"29","hashOfConfig":"23"},{"size":385,"mtime":1623341832476,"results":"30","hashOfConfig":"27"},{"size":1906,"mtime":1626035852261,"results":"31","hashOfConfig":"23"},{"size":5889,"mtime":1625744110476,"results":"32","hashOfConfig":"23"},{"size":974,"mtime":1625844205297,"results":"33","hashOfConfig":"23"},{"size":343,"mtime":1623417194173,"results":"34","hashOfConfig":"23"},{"size":1739,"mtime":1625843151225,"results":"35","hashOfConfig":"23"},{"size":434,"mtime":1625739230198,"results":"36","hashOfConfig":"23"},{"size":262,"mtime":1623667052571,"results":"37","hashOfConfig":"23"},{"size":433,"mtime":1625739361652,"results":"38","hashOfConfig":"23"},{"size":274,"mtime":1625736210233,"results":"39","hashOfConfig":"23"},{"size":232,"mtime":1625756562122,"results":"40","hashOfConfig":"23"},{"size":4856,"mtime":1625739410078,"results":"41","hashOfConfig":"23"},{"size":902,"mtime":1625843267396,"results":"42","hashOfConfig":"23"},{"size":232,"mtime":1625743482930,"results":"43","hashOfConfig":"23"},{"size":6207,"mtime":1625843699094,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qrsclg",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"5xko0",{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},"C:\\development\\react\\namma-investment-club\\src\\reportWebVitals.js",[],"C:\\development\\react\\namma-investment-club\\src\\index.js",[],"C:\\development\\react\\namma-investment-club\\src\\App.js",[],"C:\\development\\react\\namma-investment-club\\src\\components\\login\\login.js",[],["94","95"],"C:\\development\\react\\namma-investment-club\\src\\components\\dashboard\\dashboard.js",["96","97","98","99"],"import React, { useEffect, useState } from \"react\";\r\nimport firebaseDb from \"../../firebase\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Shareholding from \"./shareholding\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  updateClubTotalContribution,\r\n  updateStoreClubDetailsUserList,\r\n  updateStoreContributionDetails,\r\n} from \"../../common/common-functions\";\r\n\r\nlet usersList = [];\r\nlet usersListWithContribution = [];\r\nlet totalClubContribution = 0;\r\n\r\nconst getUserTotalContribution = (usersListWithContribution, usersList) => {\r\n  let userListObject = [];\r\n  totalClubContribution = 0;\r\n  if (\r\n    usersList &&\r\n    usersList.length > 0 &&\r\n    usersListWithContribution &&\r\n    usersListWithContribution.length > 0\r\n  ) {\r\n    usersList.map((user) => {\r\n      let userTotalContribution = 0;\r\n      usersListWithContribution.map((usersWithContribution) => {\r\n        if (\r\n          JSON.parse(usersWithContribution).Contributor.FullName ===\r\n          JSON.parse(user).FullName\r\n        ) {\r\n          userTotalContribution += JSON.parse(\r\n            usersWithContribution\r\n          ).ContributionAmount;\r\n        }\r\n      });\r\n      let userObject = JSON.parse(user);\r\n      userObject.UserTotalContribution = userTotalContribution;\r\n      totalClubContribution += userTotalContribution;\r\n      userListObject.push(userObject);\r\n    });\r\n    updateClubTotalContribution(totalClubContribution);\r\n    updateStoreClubDetailsUserList(userListObject);\r\n  }\r\n};\r\n\r\nfunction getUserList(contributionDetails) {\r\n  contributionDetails &&\r\n    contributionDetails.forEach((contribution, ind) => {\r\n      contribution[\"Contributors\"].forEach((contributor) => {\r\n        usersList.push(JSON.stringify(contributor[\"Contributor\"]));\r\n        usersListWithContribution.push(JSON.stringify(contributor));\r\n      });\r\n    });\r\n\r\n  usersList = usersList.filter((val, id, array) => array.indexOf(val) === id);\r\n  usersListWithContribution = usersListWithContribution.filter(\r\n    (val, id, array) => array.indexOf(val) === id\r\n  );\r\n  getUserTotalContribution(usersListWithContribution, usersList);\r\n}\r\n\r\nconst Dashboard = () => {\r\n  const contributionDetailsState = useSelector(\r\n    (state) => state.contributionDetails\r\n  );\r\n\r\n  var [contributionDetails, setContributionDetails] = useState();\r\n\r\n  var [userDetails, setUserDetails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (contributionDetailsState) {\r\n      setContributionDetails(contributionDetailsState);\r\n      getUserList(contributionDetailsState);\r\n      setUserDetails(usersList);\r\n    } else {\r\n      fetch(\r\n        process.env.REACT_APP_API_BASEURL +\r\n          process.env.REACT_APP_API_ENDPOINT_CONTRIBUTIONDETAILS\r\n      )\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          setContributionDetails(data);\r\n          getUserList(data);\r\n          setUserDetails(usersList);\r\n          updateStoreContributionDetails(data);\r\n        });\r\n    }\r\n\r\n    // firebaseDb.child(\"clubMemberContribution\").on(\"value\", (snapshot) => {\r\n    //   if (snapshot.val()) {\r\n    //     setContributionDetails({\r\n    //       ...snapshot.val(),\r\n    //     });\r\n    //   }\r\n    // });\r\n  }, []);\r\n\r\n  const getTotalContribution = (userId) => {\r\n    let totalContribution = 0;\r\n    contributionDetails.forEach((contribution) => {\r\n      contribution[\"Contributors\"].forEach((contributor, ind) => {\r\n        if (contributor.Contributor[\"id\"] === userId) {\r\n          totalContribution =\r\n            totalContribution + contributor.ContributionAmount;\r\n        }\r\n      });\r\n    });\r\n    return totalContribution;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contributionDetails &&\r\n        usersList.length === 0 &&\r\n        getUserList(contributionDetails)}\r\n      <div className=\"py-4\">\r\n        <div className=\"container-fluid text-center\">\r\n          <div className=\"container\">\r\n            <h1 className=\"display-4\">Dashboard</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <Table striped bordered hover variant=\"dark\" className=\"text-center\">\r\n            <thead>\r\n              <tr>\r\n                <th>Club Member Name</th>\r\n                <th>Investment</th>\r\n                <th>Current Value</th>\r\n                <th>Gain</th>\r\n                <th>% Gain</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {userDetails &&\r\n                userDetails.length > 0 &&\r\n                userDetails.map((user, ind) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>{JSON.parse(user)[\"FullName\"]}</td>\r\n                      <td>{getTotalContribution(JSON.parse(user)[\"id\"])}</td>\r\n                      <td>6547.24</td>\r\n                      <td className=\"text-success\">\r\n                        <strong>547.24</strong>\r\n                      </td>\r\n                      <td>9.12</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <Shareholding></Shareholding>\r\n        </div>\r\n        <div className=\"col\">\r\n          <div className=\"row\">\r\n            {/* className=\"table table-borderless table-stripped border border-success\" */}\r\n            <table className=\"table table-borderless table-stripped border border-success\">\r\n              <thead className=\"thead-light text-center\">\r\n                <tr>\r\n                  <th colspan=\"2\">Club Inflow</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Member Investment</td>\r\n                  <td>Other Income</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>{totalClubContribution}</td>\r\n                  <td>96</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"row\">\r\n            <table className=\"table table-borderless table-stripped border border-warning\">\r\n              <thead className=\"thead-light text-center\">\r\n                <tr>\r\n                  <th colspan=\"2\">Club Investment</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Invested Amount</td>\r\n                  <td>30000</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Current Gain</td>\r\n                  <td>2641.50</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Current Value</td>\r\n                  <td>32641.50</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <table className=\"table table-borderless table-stripped border border-info\">\r\n            <thead className=\"thead-light text-center\">\r\n              <tr>\r\n                <th>Balance Cash</th>\r\n                <th>Total Networth</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr className=\"text-center\">\r\n                <td>96</td>\r\n                <td>32736.2081</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"col\">\r\n          <table className=\"table table-borderless table-stripped border border-secondary\">\r\n            <thead className=\"thead-light text-center\">\r\n              <tr>\r\n                <th colspan=\"2\">Total Invested By</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"text-center\">\r\n              <tr>\r\n                <td>Pavan</td>\r\n                <td>20000</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Manju</td>\r\n                <td>10000</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\development\\react\\namma-investment-club\\src\\firebase.js",[],"C:\\development\\react\\namma-investment-club\\src\\components\\profile-banner.jsx",["100","101"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileBanner = () => {\r\n  return (\r\n    <>\r\n      <div className=\"profile-banner\">\r\n        <div className=\"row\">\r\n          {/* <div className=\"col-md-6\">ss</div> */}\r\n          <div className=\"col-md-12 text-center\">Welcome PAVAN V</div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileBanner;\r\n",["102","103"],"C:\\development\\react\\namma-investment-club\\src\\components\\menu\\menu.js",[],"C:\\development\\react\\namma-investment-club\\src\\components\\investments\\investments.js",["104"],"import React, { useEffect, useState } from \"react\";\r\nimport * as Constants from \"../../common/constant\";\r\nimport { getLatestNavs } from \"../../services/api.services\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { updateStoreInvestmentDetails } from \"../../common/common-functions\";\r\n\r\nconst Investments = () => {\r\n  var [totalInvestment, setTotalInvestment] = useState(0);\r\n  var [totalInvestmentNetworth, setTotalInvestmentNetworth] = useState(0);\r\n  var [totalGain, setTotalGain] = useState(0);\r\n\r\n  const investmentDetailsState = useSelector(\r\n    (state) => state.investmentDetails\r\n  );\r\n  var [investmentDetails, setInvestmentDetails] = useState({});\r\n  updateStoreInvestmentDetails(Constants.InvestmentDetails);\r\n\r\n  useEffect(() => {\r\n    let totalInv = 0;\r\n    let totalInvNetworth = 0;\r\n    let totGain = 0;\r\n    fetch(\r\n      process.env.REACT_APP_API_BASEURL +\r\n        process.env.REACT_APP_API_ENDPOINT_CONTRIBUTIONDETAILS\r\n    )\r\n      .then((resp) => resp.json())\r\n      .then((data) => console.log(\"resp data\", data));\r\n    if (investmentDetailsState && investmentDetailsState.responseData) {\r\n      setInvestmentDetails(investmentDetailsState);\r\n      investmentDetailsState.responseData.forEach((inv, ind) => {\r\n        totalInv = totalInv + inv.InvestedAmount;\r\n        getLatestNavs(inv.SchemeCode).then((data) => {\r\n          inv[\"CurrentNav\"] = data;\r\n          totalInvNetworth = totalInvNetworth + data * inv.Units;\r\n          totGain = totGain + (data * inv.Units - inv.InvestedAmount);\r\n          setInvestmentDetails([\r\n            ...investmentDetailsState.responseData.slice(0, ind),\r\n            inv,\r\n            ...investmentDetailsState.responseData.slice(ind + 1),\r\n          ]);\r\n          setTotalInvestmentNetworth(totalInvNetworth);\r\n          setTotalGain(totGain.toFixed(2));\r\n        });\r\n      });\r\n    }\r\n    setTotalInvestment(totalInv);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"py-4\">\r\n        <div className=\"container-fluid text-center\">\r\n          <div className=\"container\">\r\n            <h1 className=\"display-4\">Investments</h1>\r\n          </div>\r\n        </div>\r\n        <p>\r\n          <strong>Mutual Funds</strong>\r\n        </p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <table className=\"table table-borderless table-stripped border border-primary\">\r\n            <thead className=\"thead-light text-center\">\r\n              <tr>\r\n                <th>Fund Name</th>\r\n                <th>Invested Date</th>\r\n                <th>Amount</th>\r\n                <th>Folio Number</th>\r\n                <th>Units</th>\r\n                <th>Purchased NAV</th>\r\n                <th>Current NAV</th>\r\n                <th>Current Value</th>\r\n                <th>Current Gain</th>\r\n                <th>Invested By</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {investmentDetails &&\r\n                investmentDetails.length > 0 &&\r\n                investmentDetails.map((investment, ind) => {\r\n                  let currentGain = Number(\r\n                    investment.Units * investment.CurrentNav -\r\n                      investment.InvestedAmount\r\n                  ).toFixed(2);\r\n                  let currentValue = Number(\r\n                    investment.Units * investment.CurrentNav\r\n                  ).toFixed(2);\r\n                  return (\r\n                    <tr className=\"text-center\">\r\n                      <td className=\"text-left\">{investment.FundName}</td>\r\n                      <td>{investment.InvestedOn}</td>\r\n                      <td>{investment.InvestedAmount}</td>\r\n                      <td>{investment.FolioNumber}</td>\r\n                      <td>{investment.Units}</td>\r\n                      <td>{investment.PurchasedNav}</td>\r\n                      <td>{investment.CurrentNav}</td>\r\n                      <td className=\"text-right\">{currentValue}</td>\r\n                      <td\r\n                        className={\r\n                          currentGain < 0\r\n                            ? \"text-right text-danger\"\r\n                            : \"text-right text-success\"\r\n                        }\r\n                      >\r\n                        <strong>{currentGain}</strong>\r\n                      </td>\r\n                      <td>{investment.InvestedBy}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <Card bg=\"light\" text=\"dark\" className=\"text-center\">\r\n            <Card.Header>\r\n              <strong>Total Investments</strong>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Card.Title> {totalInvestment.toFixed(2)} </Card.Title>\r\n              {/* <Card.Text>\r\n                the bulk of the card's content.\r\n              </Card.Text> */}\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <Card\r\n            bg={totalGain > 0 ? \"success\" : \"danger\"}\r\n            text=\"white\"\r\n            className=\"text-center\"\r\n          >\r\n            <Card.Header>\r\n              <strong> Total Gain </strong>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Card.Title> {totalGain} </Card.Title>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col\">\r\n          <Card bg=\"primary\" text=\"white\" className=\"text-center\">\r\n            <Card.Header>\r\n              <strong>Total Investment Networth </strong>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Card.Title> {totalInvestmentNetworth.toFixed(2)} </Card.Title>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Investments;\r\n","C:\\development\\react\\namma-investment-club\\src\\components\\contributions\\contributions.js",[],"C:\\development\\react\\namma-investment-club\\src\\services\\api.services.js",[],"C:\\development\\react\\namma-investment-club\\src\\components\\dashboard\\shareholding.js",["105","106","107","108","109"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport watch from \"redux-watch\";\r\nimport store from \"../../store\";\r\n\r\nlet clubDetailsState;\r\n\r\nconst Shareholding = () => {\r\n  clubDetailsState = useSelector((state) => state.clubDetails);\r\n\r\n  var [clubDetails, setClubDetails] = useState(clubDetailsState);\r\n\r\n  const getPercentageShareHolding = (userId) => {\r\n    let percentageShareHolding = 0;\r\n    if (clubDetailsState.usersList && clubDetailsState.totalContribution) {\r\n      clubDetailsState.usersList.map((user) => {\r\n        if (user.id === userId) {\r\n          percentageShareHolding =\r\n            (user.UserTotalContribution / clubDetailsState.totalContribution) *\r\n            100;\r\n        }\r\n      });\r\n    }\r\n    return percentageShareHolding;\r\n  };\r\n\r\n  // let w = watch(store.getState, \"clubDetails\");\r\n  // store.subscribe(\r\n  //   w((newVal, oldVal, objectPath) => {\r\n  //     // console.log(\"%s changed from %s to %s\", objectPath, oldVal, newVal);\r\n  //   })\r\n  // );\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table table-borderless table-stripped border border-secondary\">\r\n        <thead className=\"thead-light text-center\">\r\n          <tr>\r\n            <th colspan=\"2\">% Shareholding</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {clubDetails &&\r\n            clubDetails.usersList &&\r\n            clubDetails.usersList.map((user, ind) => {\r\n              return (\r\n                <tr>\r\n                  <td>{user.FullName}</td>\r\n                  <td>{getPercentageShareHolding(user.id)}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shareholding;\r\n","C:\\development\\react\\namma-investment-club\\src\\reducers\\index.js",[],"C:\\development\\react\\namma-investment-club\\src\\reducers\\investment-details.js",[],"C:\\development\\react\\namma-investment-club\\src\\actions\\index.js",[],"C:\\development\\react\\namma-investment-club\\src\\reducers\\contribution-details.js",[],"C:\\development\\react\\namma-investment-club\\src\\reducers\\club-details.js",[],"C:\\development\\react\\namma-investment-club\\src\\common\\constant.js",[],"C:\\development\\react\\namma-investment-club\\src\\common\\common-functions.js",[],"C:\\development\\react\\namma-investment-club\\src\\store.js",[],"C:\\development\\react\\namma-investment-club\\src\\components\\contributions\\contribution-table.js",["110","111","112","113"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { updateStoreContributionDetails } from \"../../common/common-functions\";\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    \"& > *\": {\r\n      borderBottom: \"unset\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction createData(contribution, totalContributionInMonth) {\r\n  let history = [];\r\n  contribution.Contributors.map((obj) => {\r\n    history.push({\r\n      date: obj.ContributionDate,\r\n      contributorFullName: obj.Contributor[\"FullName\"],\r\n      amount: obj.ContributionAmount,\r\n    });\r\n  });\r\n\r\n  return {\r\n    contributionMonth: contribution.ContributionMonth,\r\n    totalContributionInMonth,\r\n    history,\r\n  };\r\n}\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.contributionMonth}\r\n        </TableCell>\r\n        <TableCell align=\"center\">{row.totalContributionInMonth}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                History\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\" className=\"w-50\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell className=\"font-weight-bold\" align=\"center\">\r\n                      Date\r\n                    </TableCell>\r\n                    <TableCell className=\"font-weight-bold\" align=\"center\">\r\n                      Contributor\r\n                    </TableCell>\r\n                    <TableCell className=\"font-weight-bold\" align=\"center\">\r\n                      Amount\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.history.map((historyRow) => (\r\n                    <TableRow key={historyRow.date}>\r\n                      <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                        {historyRow.date}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        {historyRow.contributorFullName}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nRow.propTypes = {\r\n  row: PropTypes.shape({\r\n    calories: PropTypes.number.isRequired,\r\n    carbs: PropTypes.number.isRequired,\r\n    fat: PropTypes.number.isRequired,\r\n    history: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        amount: PropTypes.number.isRequired,\r\n        contributorFullName: PropTypes.string.isRequired,\r\n        date: PropTypes.string.isRequired,\r\n      })\r\n    ).isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    protein: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nconst rows = [];\r\n\r\nfunction getRowsData(contributionDetails) {\r\n  contributionDetails &&\r\n    contributionDetails.map((obj) => {\r\n      let contributionAmount = 0;\r\n      obj.Contributors.map((contributor) => {\r\n        contributionAmount =\r\n          contributionAmount + contributor.ContributionAmount;\r\n      });\r\n      rows.push(createData(obj, contributionAmount));\r\n    });\r\n}\r\n\r\nexport default function ContributionTable() {\r\n  const [contributionDetails, setContributionDetails] = useState();\r\n  const contributionDetailsState = useSelector(\r\n    (state) => state.contributionDetails\r\n  );\r\n\r\n  useEffect(() => {\r\n    setContributionDetails(contributionDetailsState);\r\n    !contributionDetailsState &&\r\n      fetch(\r\n        process.env.REACT_APP_API_BASEURL +\r\n          process.env.REACT_APP_API_ENDPOINT_CONTRIBUTIONDETAILS\r\n      )\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          setContributionDetails(data);\r\n          updateStoreContributionDetails(data);\r\n        });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {rows && rows.length === 0 && getRowsData(contributionDetails)}\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"collapsible table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell className=\"font-weight-bold\">Month</TableCell>\r\n              <TableCell align=\"center\" className=\"font-weight-bold\">\r\n                Contributed Amount\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <Row key={row.name} row={row} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":18},{"ruleId":"122","severity":1,"message":"123","line":25,"column":26,"nodeType":"124","messageId":"125","endLine":25,"endColumn":28},{"ruleId":"122","severity":1,"message":"123","line":27,"column":61,"nodeType":"124","messageId":"125","endLine":27,"endColumn":63},{"ruleId":"126","severity":1,"message":"127","line":98,"column":6,"nodeType":"128","endLine":98,"endColumn":8,"suggestions":"129"},{"ruleId":"118","severity":1,"message":"130","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"131","line":1,"column":28,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"114","replacedBy":"132"},{"ruleId":"116","replacedBy":"133"},{"ruleId":"126","severity":1,"message":"134","line":48,"column":6,"nodeType":"128","endLine":48,"endColumn":8,"suggestions":"135"},{"ruleId":"118","severity":1,"message":"130","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"136","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":13},{"ruleId":"118","severity":1,"message":"137","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":13},{"ruleId":"118","severity":1,"message":"138","line":12,"column":21,"nodeType":"120","messageId":"121","endLine":12,"endColumn":35},{"ruleId":"122","severity":1,"message":"123","line":17,"column":45,"nodeType":"124","messageId":"125","endLine":17,"endColumn":47},{"ruleId":"122","severity":1,"message":"123","line":30,"column":39,"nodeType":"124","messageId":"125","endLine":30,"endColumn":41},{"ruleId":"122","severity":1,"message":"123","line":132,"column":35,"nodeType":"124","messageId":"125","endLine":132,"endColumn":37},{"ruleId":"122","severity":1,"message":"123","line":134,"column":42,"nodeType":"124","messageId":"125","endLine":134,"endColumn":44},{"ruleId":"126","severity":1,"message":"127","line":160,"column":6,"nodeType":"128","endLine":160,"endColumn":8,"suggestions":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'firebaseDb' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'contributionDetailsState'. Either include it or remove the dependency array.","ArrayExpression",["142"],"'useEffect' is defined but never used.","'useState' is defined but never used.",["140"],["141"],"React Hook useEffect has a missing dependency: 'investmentDetailsState'. Either include it or remove the dependency array.",["143"],"'watch' is defined but never used.","'store' is defined but never used.","'setClubDetails' is assigned a value but never used.",["144"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"145","fix":"149"},"Update the dependencies array to be: [contributionDetailsState]",{"range":"150","text":"151"},"Update the dependencies array to be: [investmentDetailsState]",{"range":"152","text":"153"},{"range":"154","text":"151"},[3178,3180],"[contributionDetailsState]",[1939,1941],"[investmentDetailsState]",[5478,5480]]